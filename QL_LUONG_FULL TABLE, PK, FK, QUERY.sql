CREATE DATABASE QL_LUONG
GO

USE QL_LUONG
GO

	CREATE TABLE DMCV(
	MACV VARCHAR(3) NOT NULL PRIMARY KEY,
	TENCV NVARCHAR(50),
	DONGIACV INT
	);

	CREATE TABLE DMTO(
	MATO INT NOT NULL PRIMARY KEY,
	TENTO NVARCHAR(10)
	);

	CREATE TABLE TRINHDO(
	MATRDO VARCHAR(3) NOT NULL PRIMARY KEY,
	TENTRDO NVARCHAR(30)
	);

	CREATE TABLE DMNV(
	MANV VARCHAR(4) NOT NULL PRIMARY KEY,
	HONV NVARCHAR(30),
	TENNV NVARCHAR(10),
	NAM VARCHAR(3),
	NGSINH DATE,
	NOSINH NVARCHAR(15),
	HSLUONG FLOAT,
	MATO INT NOT NULL,
	FOREIGN KEY (MATO) REFERENCES DMTO(MATO),
	MATRDO VARCHAR(3) NOT NULL,
	FOREIGN KEY (MATRDO) REFERENCES TRINHDO(MATRDO),
	HINH INT,
	LYLICH NVARCHAR(1),
	NGAYVAO DATE,
	NGHIVIEC VARCHAR(3),
	NGAYNV DATE,
	LYDONV NVARCHAR(30),
	TAPTHE VARCHAR(3)
	);

	CREATE TABLE CHAMCONG(
	STTCCONG INT NOT NULL PRIMARY KEY,
	THANGNAM FLOAT,
	MANV VARCHAR(4) NOT NULL,
	FOREIGN KEY (MANV) REFERENCES DMNV(MANV),
	MACV VARCHAR(3) NOT NULL,
	FOREIGN KEY (MACV) REFERENCES DMCV(MACV),
	SOCONG INT,
	TIENCONG FLOAT
	);

	CREATE TABLE LUONG(
	THANGNAM FLOAT NOT NULL,
	MANV VARCHAR(4) NOT NULL,
	FOREIGN KEY (MANV) REFERENCES DMNV(MANV),
	TIENLUONG FLOAT,
	KHAUTRU FLOAT
	);

	/*BẮT ĐẦU NHẬP DỮ LIỆU*/

	INSERT INTO DMCV VALUES('BV', N'BỐC VÁC', 5000);
	INSERT INTO DMCV VALUES('CM', N'CẠO MŨ', 3000);
	INSERT INTO DMCV VALUES('HC', N'CÔNG TÁC HÀNH CHÁNH', 2500);
	INSERT INTO DMCV VALUES('PL', N'KIỂM NGHIỆM VÀ PHÂN LOẠI MŨ', 10000);
	INSERT INTO DMCV VALUES('QL', N'QUẢN LÝ VƯỜN CÂY', 15000);
	INSERT INTO DMCV VALUES('TC', N'CHĂM SÓC VÀ TƯỚI CÂY', 1000);

	INSERT INTO DMTO VALUES(01, N'TỔ 1');
	INSERT INTO DMTO VALUES(02, N'TỔ 2');
	INSERT INTO DMTO VALUES(03, N'TỔ 3');
	INSERT INTO DMTO VALUES(04, N'TỔ 4');
	INSERT INTO DMTO VALUES(05, N'TỔ 5');
	INSERT INTO DMTO VALUES(06, N'TỔ 6');


	INSERT INTO TRINHDO VALUES('C1', N'TIỂU HỌC');
	INSERT INTO TRINHDO VALUES('C2', N'PHỔ THÔNG CƠ SỞ');
	INSERT INTO TRINHDO VALUES('CH', N'THẠC SĨ');
	INSERT INTO TRINHDO VALUES('CN', N'CỮ NHÂN');
	INSERT INTO TRINHDO VALUES('PT', N'PHỔ THÔNG TRUNG HỌC');
	INSERT INTO TRINHDO VALUES('TC', N'TRUNG CẤP');
	INSERT INTO TRINHDO VALUES('TS', N'TIẾN SĨ');

	INSERT INTO DMNV VALUES('A01', N'NGUYỄN MINH', N'TRIẾT', 'YES', '1940/3/7', N'HUẾ', 4.5, 01, 'TS' ,NULL, NULL, '1965/1/1', 'YES', '1900/1/1', N'VỀ HƯU', 'YES');
	INSERT INTO DMNV VALUES('A02', N'LÊ THU', N'DUNG', 'NO', '1970/2/5', N'TPHCM', 2, 01, 'CH',NULL, NULL, '1993/5/1', 'NO', NULL, NULL, 'NO');
	INSERT INTO DMNV VALUES('A03', N'THẠCH ANH', N'TRIẾT', 'NO', '1960/10/2', N'CẦN THƠ', 2, 02, 'PT' ,NULL, NULL, '1985/6/20', 'NO', NULL, NULL, 'YES');
	INSERT INTO DMNV VALUES('B02', N'TRẦN VĂN', N'CHÍNH', 'YES', '1950/8/9', N'ĐỒNG NAI', 1, 02, 'CH' ,NULL, NULL, '1975/8/10', 'NO', NULL, NULL, 'NO');
	INSERT INTO DMNV VALUES('B03', N'NGUYỄN THANH', N'PHƯƠNG', 'NO', '1974/5/4', N'TÂY NINH', 2, 03, 'CN' ,NULL, NULL, '1999/2/1', 'NO', NULL, NULL, 'NO');
	INSERT INTO DMNV VALUES('C02', N'TRẦN THANH', N'MAI', 'NO', '1968/3/20', N'TPHCM', 3, 03, 'TC' ,NULL, NULL, '1990/5/25', 'NO', NULL, NULL, 'NO');
	INSERT INTO DMNV VALUES('C03', N'LÊ QUANG', N'VINH', 'YES', '1948/4/12', N'ĐÀ LẠT', 1, 01, 'TS', NULL, NULL, '1972/5/15', 'NO', NULL, NULL, 'YES');
	INSERT INTO DMNV VALUES('C04', N'NGUYỄN HỒNG', N'SƯƠNG', 'NO', '1972/10/10', N'TÂY NINH', 2, 04, 'TS', NULL, NULL, '1923/3/9', 'YES', '1998/01/01', N'BỊ LUẬT BUỘT THÔI VIỆC', 'NO');

	INSERT INTO CHAMCONG VALUES(1, 062000, 'A02', 'CM', 5, NULL);
	INSERT INTO CHAMCONG VALUES(2, 062000, 'A02', 'HC', 15, NULL);
	INSERT INTO CHAMCONG VALUES(3, 072000, 'C02', 'QL', 15, NULL);
	INSERT INTO CHAMCONG VALUES(4, 072000, 'A01', 'BV', 20, NULL);
	INSERT INTO CHAMCONG VALUES(5, 072000, 'A01', 'TC', 30, NULL);
	INSERT INTO CHAMCONG VALUES(6, 072000, 'A02', 'CM', 15, NULL);
	INSERT INTO CHAMCONG VALUES(7, 072000, 'A02', 'HC', 2, NULL);
	INSERT INTO CHAMCONG VALUES(8, 072000, 'C04', 'CM', 30, NULL);
	INSERT INTO CHAMCONG VALUES(9, 072000, 'A03', 'HC', 10, NULL);
	INSERT INTO CHAMCONG VALUES(10, 072000, 'B02', 'CM', 30, NULL);
	INSERT INTO CHAMCONG VALUES(11, 072000, 'B03', 'TC', 20, NULL);


	INSERT INTO LUONG VALUES(062000, 'A02', NULL, NULL);
	INSERT INTO LUONG VALUES(062000, 'C02', NULL, NULL);
	INSERT INTO LUONG VALUES(072000, 'A01', NULL, NULL);
	INSERT INTO LUONG VALUES(072000, 'A02', NULL, NULL);
	INSERT INTO LUONG VALUES(072000, 'A03', NULL, NULL);
	INSERT INTO LUONG VALUES(072000, 'B02', NULL, NULL);
	INSERT INTO LUONG VALUES(072000, 'B03', NULL, NULL);
	INSERT INTO LUONG VALUES(072000, 'C04', NULL, NULL);

-- HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HONV, TENNV, NGAYSINH, NAM --
SELECT MANV, HONV, TENNV, NGSINH, NAM
FROM DMNV

-- HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HOTEN, NGAYSINH, NAM. TRONG ĐÓ HOTEN LÀ HONV VÀ TENNV GHÉP LẠI --
SELECT MANV, HONV + ' ' + TENNV AS HOTEN, NGSINH, NAM
FROM DMNV

-- HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HOTEN, NAMSINH, TUOI. TRONG ĐÓ TUOI ĐƯỢC TÍNH DỰA VÀO NGÀY THÁNG NĂM HIỆN TẠI VÀ NGÀY SINH --
SELECT MANV, HONV + ' ' + TENNV AS HOTEN, YEAR(NGSINH) AS NAMSINH, DATEDIFF(YEAR, NGSINH, GETDATE()) AS TUOI
FROM DMNV;

-- HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HOTEN, PHAI. TRONG ĐÓ HOTEN LÀ HONV VÀ TENNV GHÉP LẠI, PHAI SẼ HIỆN “NAM” NẾU FIELD NAM LÀ YES, NGƯỢC LẠI LÀ “NỮ” --
SELECT MANV, HONV + ' ' + TENNV AS HOTEN, 
    CASE 
        WHEN NAM = 'YES' THEN 'NAM'
        ELSE N'NỮ'
    END AS PHAI
FROM DMNV;

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HOTEN, PHAI. TRONG ĐÓ HOTEN LÀ
HONV VÀ TENNV GHÉP LẠI, PHAI SẼ HIỆN “NAM” NẾU FIELD NAM LÀ YES, NGƯỢC LẠI LÀ “NỮ”,
NHƯNG CHỈ LỌC CÁC NHÂN VIÊN CÓ TÊN LÀ “CHÍNH”
*/
SELECT MANV, HONV + ' ' + TENNV AS HOTEN, 
    CASE 
        WHEN NAM = 'YES' THEN 'NAM'
        ELSE 'NỮ'
    END AS PHAI
FROM DMNV
WHERE TENNV = 'CHÍNH';

-- HIỂN THỊ DANH SÁCH CÁC NHÂN VIÊN NAM CÓ MÃ SỐ BẮT ĐẦU LÀ A --
SELECT *
FROM DMNV
WHERE NAM = 'YES' AND MANV LIKE 'A%';

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN CÓ HỌ LÀ "TRẦN" HOẶC "NGUYỄN" */
SELECT *
FROM DMNV
WHERE HONV LIKE 'TR%' OR HONV LIKE 'NG%';


/* HIỂN THỊ DANH SÁCH NHÂN VIÊN CÓ TÊN BẮT ĐẦU TỪ "D" --> "S" */
SELECT *
FROM DMNV
WHERE TENNV BETWEEN 'D' AND 'S';

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN CÓ NGÀY VÀO BẮT ĐẦU TỪ 10/08/75 ĐẾN 20/06/85, GỒM CÁC THÔNG TIN: MANV, HOTEN, PHAI */

SELECT MANV, HONV + ' ' + TENNV AS 'HOTEN', NGAYVAO,
CASE
WHEN NAM = 'YES' THEN 'NAM'
ELSE N'NỮ'
END AS 'PHAI'
FROM DMNV
WHERE NGAYVAO BETWEEN '1975-08-10' AND '1985-06-20'

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN VÀ SẮP XẾP THEO MATO TĂNG DẦN */
SELECT *
FROM DMNV
ORDER BY MATO ASC;

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN VÀ SẮP XẾP THEO MATO, TENNV, HONV TĂNG DẦN */
SELECT *
FROM DMNV
ORDER BY MATO ASC, TENNV ASC, HONV ASC;

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN VÀ SẮP XẾP THEO HSLUONG TĂNG DẦN VÀ TENNV GIẢM DẦN */
SELECT *
FROM DMNV
ORDER BY HSLUONG ASC, TENNV DESC;

/* HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HOTEN, NGAYSINH, NOISINH NHƯNG CHỈ LỌC CÁC NHÂN VIÊN SINH VÀO NGÀY 20 VÀ SẮP XẾP THEO HOTEN TĂNG DẦN */
SELECT MANV, HONV + ' ' + TENNV AS HOTEN, NGSINH, NOISINH
FROM DMNV
WHERE DAY(NGSINH) = 20
ORDER BY HOTEN ASC;


/* HIỂN THỊ DANH SÁCH NHÂN VIÊN GỒM CÁC THÔNG TIN: MANV, HOTEN, NAMSINH, TUOI. TRONG ĐÓ TUOI ĐƯỢC TÍNH DỰA VÀO NGÀY THÁNG NĂM HIỆN TẠI VÀ NGÀY SINH, NHƯNG CHỈ LỌC CÁC NHÂN VIÊN TỪ 50 TUỔI TRỞ LÊN VÀ SẮP THEO TUỔI GIẢM DẦN */
SELECT MANV, (HONV + ' ' + TENNV) AS HOTEN, YEAR(NGSINH) AS NAMSINH, DATEDIFF(YEAR, NGSINH, GETDATE()) AS TUOI
FROM DMNV
WHERE DATEDIFF(YEAR, NGSINH, GETDATE()) >= 50
ORDER BY TUOI DESC;

/* HIỂN THỊ THÔNG TIN SAU: MANV, HOTEN, TENTRDO, HSLUONG, NGAYVAO CỦA CÁC NHÂN VIÊN CÓ HSLUONG TỪ 2 ĐẾN 4 */
SELECT DMNV.MANV, (DMNV.HONV + ' ' + DMNV.TENNV) AS HOTEN, TRINHDO.TENTRDO, DMNV.HSLUONG, DMNV.NGAYVAO
FROM DMNV
INNER JOIN TRINHDO ON DMNV.MATRDO = TRINHDO.MATRDO
WHERE DMNV.HSLUONG BETWEEN 2 AND 4

/* HIỂN THỊ CÁC THÔNG TIN SAU: MANV, HOTEN, MACV, TENCV, SOCONG CỦA CÁC NHÂN VIÊN VÀO LÀM TRƯỚC THÁNG 5 NĂM 1972 */
SELECT DMNV.MANV, (DMNV.HONV + ' ' + DMNV.TENNV) AS HOTEN, DMCV.MACV, DMCV.TENCV, CHAMCONG.SOCONG
FROM DMNV
INNER JOIN CHAMCONG ON DMNV.MANV = CHAMCONG.MANV
INNER JOIN DMCV ON CHAMCONG.MACV = DMCV.MACV
WHERE DMNV.NGAYVAO < '1972-05-01'

/* HIỂN THỊ THÔNG TIN CỦA CÁC NHÂN VIÊN ĐƯỢC SINH VÀO NĂM 1970 */
SELECT *
FROM DMNV
WHERE YEAR(NGSINH) = 1970

/* HIỂN THỊ THÔNG TIN CỦA CÁC NHÂN VIÊN CÓ NGÀY VÀO LÀM VIỆC LÀ QUÍ 2 NĂM 1990 */
SELECT *
FROM DMNV
WHERE MONTH(NGAYVAO) BETWEEN 4 AND 6 AND YEAR(NGAYVAO) = 1990

/* HIỂN THỊ THÔNG TIN CỦA NHÂN VIÊN LỚN TUỔI NHẤT */
SELECT *
FROM DMNV
WHERE NGSINH = (SELECT MAX(NGSINH) FROM DMNV);

/* HIỂN THỊ THÔNG TIN CỦA 2 NHÂN VIÊN CÓ HSLUONG CAO NHẤT */
SELECT *
FROM DMNV
WHERE HSLUONG IN (SELECT TOP 2 HSLUONG FROM DMNV ORDER BY HSLUONG DESC)

/* HIỂN THỊ TỔNG SỐ NHÂN VIÊN CỦA TỪNG TỔ */
SELECT DMTO.MATO, DMTO.TENTO, COUNT(DMNV.MANV) AS TONGSONV
FROM DMTO
LEFT JOIN DMNV ON DMTO.MATO = DMNV.MATO
GROUP BY DMTO.MATO, DMTO.TENTO;

/* CHO BIẾT TỔNG SỐ NHÂN VIÊN CỦA TỪNG TRÌNH ĐỘ, THÔNG TIN GỒM: MATRDO, TENTRDO, TONGSONV.
SẮP XẾP TĂNG DẦN THEO TỔNG SỐ NHÂN VIÊN. */
SELECT TRINHDO.MATRDO, TRINHDO.TENTRDO, COUNT(DMNV.MANV) AS TONGSONV
FROM DMNV
INNER JOIN TRINHDO
ON DMNV.MATRDO = TRINHDO.MATRDO
GROUP BY TRINHDO.MATRDO, TRINHDO.TENTRDO
ORDER BY TONGSONV ASC;

/* CHO BIẾT TỔNG SỐ NHÂN VIÊN CỦA TỪNG TRÌNH ĐỘ, THÔNG TIN GỒM: MATRDO, TENTRDO, TONGSONV,
TỔNG SỐ NAM, TỔNG SỐ NỮ. SẮP XẾP TĂNG DẦN THEO TỔNG SỐ NHÂN VIÊN. */
SELECT TRINHDO.MATRDO, TRINHDO.TENTRDO, COUNT(DMNV.MATRDO) AS TONGSONV,
SUM(CASE WHEN DMNV.NAM = 'YES' THEN 1 ELSE 0 END) AS TONGNAM,
SUM(CASE WHEN DMNV.NAM = 'NO' THEN 1 ELSE 0 END) AS TONGNU
FROM TRINHDO
JOIN DMNV ON DMNV.MATRDO = TRINHDO.MATRDO
GROUP BY TRINHDO.MATRDO, TRINHDO.TENTRDO
ORDER BY TONGSONV ASC

/* HIỂN THỊ THÔNG TIN SAU: MANV, HOTEN, TONGSOCONG CỦA TẤT CẢ CÁC NHÂN VIÊN CÓ TỔNG SỐ CÔNG TỪ 20 TRỞ LÊN */
SELECT DMNV.MANV, HONV + ' ' + TENNV AS HOTEN, SUM(SOCONG) AS TONGSOCONG
FROM DMNV
JOIN CHAMCONG ON DMNV.MANV = CHAMCONG.MANV
GROUP BY DMNV.MANV, DMNV.HONV, DMNV.TENNV
HAVING SUM(SOCONG) >= 20

/* HIỂN THỊ THÔNG TIN SAU: MANV, HOTEN, PHAI, TUOI CỦA CÁC NAM NHÂN VIÊN VÀ NỮ NHÂN VIÊN CÓ
HSLUONG CAO NHẤT TRONG PHÁI CỦA HỌ. ( CÁC NAM NHÂN VIÊN CÓ HSLUONG CAO NHẤT BÊN NAM,
CÁC NỮ NHÂN VIÊN CÓ HSLUONG CAO NHẤT BÊN NỮ ). */

(SELECT MANV, HONV + ' ' + TENNV AS HOTEN, NAM, DATEDIFF(YEAR, NGSINH, GETDATE()) AS TUOI
FROM DMNV
WHERE NAM = 'YES' AND HSLUONG IN (
  SELECT MAX(HSLUONG) FROM DMNV WHERE NAM = 'YES'
))
UNION
(SELECT MANV, HONV + ' ' + TENNV AS HOTEN, NAM, DATEDIFF(YEAR, NGSINH, GETDATE()) AS TUOI
FROM DMNV
WHERE NAM = 'NO' AND HSLUONG IN (
  SELECT MAX(HSLUONG) FROM DMNV WHERE NAM = 'NO'
))

/* HÃY CHO BIẾT TRÌNH ĐỘ VĂN HÓA NÀO CÓ SỐ NHÂN VIÊN NHIỀU NHẤT */
SELECT TOP 1 TD.MATRDO, TD.TENTRDO AS N'TÊN TRÌNH ĐỘ VĂN HOÁ CÓ SỐ NHÂN VIÊN NHIỀU NHẤT', COUNT(NV.MANV) AS TONGSONV
FROM DMNV AS NV, TRINHDO AS TD
GROUP BY TD.MATRDO, TD.TENTRDO
ORDER BY TONGSONV DESC

/* HÃY CHO BIẾT THÔNG TIN CỦA CÁC NHÂN VIÊN THUỘC TỔ 1 VÀ TỔ 2 */
SELECT *
FROM DMNV
WHERE MATO IN ('1', '2');

-- HIỂN THỊ THÔNG TIN CÁC NHÂN VIÊN KHÔNG THUỘC TỔ 1
SELECT *
FROM DMNV
WHERE MATO <> '1';


/* HÃY CHO BIẾT THÔNG TIN CỦA CÔNG VIỆC NÀO CÓ TỔNG KHỐI LƯỢNG CÔNG VIỆC THẤP NHẤT TRONG
THÁNG 7 NĂM 2000 */
SELECT TOP 1 DMCV.TENCV, MIN(CHAMCONG.SOCONG) AS TONGSOCONG
FROM CHAMCONG
JOIN DMNV ON CHAMCONG.MANV = DMNV.MANV
JOIN DMCV ON CHAMCONG.MACV = DMCV.MACV
WHERE CHAMCONG.THANGNAM = 72000
GROUP BY DMCV.TENCV
ORDER BY TONGSOCONG ASC

/* BẰNG MỘT TRUY VẤN HÃY XÓA TẤT CẢ CÁC THÔNG TIN CỦA NHÂN VIÊN CÓ MÃ SỐ “A02” TRONG BẢNG
DMNV VÀ CHAMCONG. SAU ĐÓ TẠO CÁC TRUY VẤN THÍCH HỢP ĐỂ NHẬP LẠI THÔNG TIN CỦA NHÂN
VIÊN “A02” TRONG BẢNG DMNV VÀ CHAMCONG */

-- 1. XÓA TẤT CẢ CÁC THÔNG TIN CỦA NHÂN VIÊN CÓ MÃ SỐ "A02" TRONG BẢNG DMNV VÀ CHAMCONG
DELETE FROM DMNV WHERE MANV = 'A02';
DELETE FROM CHAMCONG WHERE MANV = 'A02';

-- 2. NHẬP LẠI THÔNG TIN CỦA NHÂN VIÊN "A02" TRONG BẢNG DMNV

INSERT INTO DMNV (MANV, HONV, TENNV, NAM, NGSINH, NOISINH, HSLUONG, MATO, MATRDO, HINH, LYLICH, NGAYVAO, NGHIVIEC, NGAYNV, LYDONV, TAPTHE)
VALUES ('A02', 'NGUYỄN VĂN', 'AN', 'NAM', '1999-05-20', 'HÀ NỘI', 1200000, 1, 'C1', 1, 'Y', '2020-01-01', NULL, '2022-01-01', NULL, 'G1');

--3. NHẬP LẠI THÔNG TIN CỦA NHÂN VIÊN "A02" TRONG BẢNG CHAMCONG

INSERT INTO CHAMCONG (STTCCONG, THANGNAM, MANV, MACV, SOCONG, TIENCONG)
VALUES (1, 20001, 'A02', 'C1', 160, 100000),
       (2, 20002, 'A02', 'C2', 180, 120000);

/* THÊM MỘT TRÌNH ĐỘ MỚI GỒM CÁC THÔNG TIN: “CD”, “CAO ĐẲNG”. VỚI THÔNG TIN VỀ 1 TRÌNH
ĐỘ MỚI SẼ ĐƯỢC NHẬP VÀO KHI THỰC HIỆN QUERY. */
INSERT INTO TRINHDO (MATRDO, TENTRDO)
VALUES ('CD', 'CAO ĐẲNG');

-- TẠO MỘT TRUY VẤN DÙNG ĐỂ XÓA MỘT TRÌNH ĐỘ CÓ TÊN LÀ “CAO ĐẲNG” --

DELETE FROM TRINHDO WHERE TENTRDO = 'CAO ĐẲNG';

-- TÍNH LẠI TIỀN CÔNG TRONG BẢNG CHẤM CÔNG BIẾT: TIENCONG = DONGIACV * SOCONG --
UPDATE CHAMCONG
SET TIENCONG = DONGIACV * SOCONG
FROM CHAMCONG INNER JOIN DMCV
ON CHAMCONG.MACV = DMCV.MACV;

/* NÂNG HỆ SỐ LƯƠNG CHO CÁC NHÂN VIÊN CÓ THÂM NIÊN TRÊN 5 NĂM VÀ CÓ TRÌNH ĐỘ LÀ CỬ NHÂN
THÌ THÊM 0.1, THẠC SĨ THÌ THÊM 0.15, TIẾN SĨ THÌ THÊM 0.2, CÒN LẠI LÀ 0.05. */
UPDATE DMNV
SET HSLUONG = HSLUONG + 
    (CASE
        WHEN DATEDIFF(YEAR, NGSINH, GETDATE()) > 5 AND MATRDO = 'CN' THEN 0.1
        WHEN DATEDIFF(YEAR, NGSINH, GETDATE()) > 5 AND MATRDO = 'TS' THEN 0.15
        WHEN DATEDIFF(YEAR, NGSINH, GETDATE()) > 5 AND MATRDO = 'TS' THEN 0.2
        ELSE 0.05
     END)
WHERE DATEDIFF(YEAR, NGSINH, GETDATE()) > 5 AND (MATRDO = 'CN' OR MATRDO = 'TS' OR MATRDO = 'TS');

/* TÍNH TIỀN LƯƠNG TRONG BẢNG LƯƠNG.
THEO CÔNG THỨC TIENLUONG =  TIENCONG *HSLUONG
− TRƯỚC TIÊN HÃY TÍNH TỔNG TIỀN CÔNG CỦA TỪNG NHÂN VIÊN THEO TỪNG THÁNG NĂM.
− SAU ĐÓ MỚI CẬP NHẬT TIỀN LƯƠNG */

UPDATE LUONG
SET TIENLUONG = (SELECT SUM(TIENCONG) FROM CHAMCONG WHERE CHAMCONG.THANGNAM = LUONG.THANGNAM AND CHAMCONG.MANV = LUONG.MANV) * HSLUONG
FROM LUONG INNER JOIN DMNV
ON LUONG.MANV = DMNV.MANV;

/* CẬP NHẬT KHẤU TRỪ CHO TẤT CẢ CÁC NHÂN VIÊN VỚI CÔNG THỨC NHƯ SAU:
KHAUTRU = TIENLUONG * 0.07 */

UPDATE LUONG
SET KHAUTRU = TIENLUONG * 0.07

-- HÃY CHO BIẾT THÔNG TIN CỦA CÁC CÔNG VIỆC CHƯA CÓ NGƯỜI LÀM. --
SELECT *
FROM DMCV
WHERE MACV NOT IN (SELECT MACV FROM CHAMCONG);

/* HÃY THỂ HIỆN THÔNG TIN CỦA NHỮNG NHÂN VIÊN LÀM VIỆC CÙNG TỔ VỚI NHÂN VIÊN “TRẦN VĂN
CHÍNH” */
SELECT *
FROM DMNV
WHERE MATO IN (SELECT MATO FROM DMNV WHERE HONV + ' ' + TENNV = N'TRẦN VĂN CHÍNH');

/* CHO BIẾT THÔNG TIN CỦA CÁC TỔ CÓ SỐ NHÂN VIÊN LỚN HƠN HOẶC BẰNG VỚI SỐ NHÂN VIÊN TRONG
TỔ “02”. */
SELECT DMTO.*
FROM DMTO
WHERE (SELECT COUNT(*) FROM DMNV WHERE DMNV.MATO = DMTO.MATO) >= (SELECT COUNT(*) FROM DMNV WHERE DMNV.MATO = 2);

/* CHO BIẾT THÔNG TIN CÁC NHÂN VIÊN CÓ TỔNG SỐ CÔNG >= TỔNG SỐ CÔNG CỦA NHÂN VIÊN “A03” (
CHỈ TÍNH CHO THÁNG 7 NĂM 2000 ) */
SELECT DMNV.*
FROM DMNV
WHERE (SELECT SUM(SOCONG) FROM CHAMCONG WHERE CHAMCONG.MANV = DMNV.MANV AND THANGNAM = '72000') >= (SELECT SUM(SOCONG) FROM CHAMCONG WHERE CHAMCONG.MANV = 'A03' AND THANGNAM = '72000');

/* HÃY CHO BIẾT THÔNG TIN CỦA CÁC NHÂN VIÊN LỚN TUỔI NHẤT, BẰNG CÁCH CÓ SỬ DỤNG TRUY VẤN
CON. */
SELECT DMNV.*
FROM DMNV
WHERE NGSINH IN (SELECT MAX(NGSINH) FROM DMNV);

/* HÃY CHO BIẾT TRÌNH ĐỘ VĂN HÓA NÀO CÓ SỐ NHÂN VIÊN NHIỀU NHẤT, BẰNG CÁCH CÓ SỬ DỤNG TRUY
VẤN CON. */
SELECT TRINHDO.*
FROM TRINHDO
WHERE MATRDO IN (SELECT MATRDO FROM DMNV
                 GROUP BY MATRDO
                 HAVING COUNT(MATRDO) = (SELECT MAX(N) FROM (SELECT COUNT(MATRDO) AS N FROM DMNV GROUP BY MATRDO) TBL));

/* TẠO TRUY VẤN LIỆT KÊ CÁC NHÂN VIÊN CÓ HỆ SỐ LƯƠNG CAO HƠN HỆ SỐ LƯƠNG CỦA NGƯỜI CÓ HỆ SỐ
LƯƠNG THẤP NHẤT. */
SELECT * FROM DMNV
WHERE HSLUONG > (SELECT MIN(HSLUONG) FROM DMNV);
